name: e-health

services:
  # BEGIN: Microservices

  # Gateway
  frontdoor:
    container_name: e-health-frontdoor
    build:
      context: ./frontdoor
      dockerfile: ../Dockerfile

    env_file:
      - ./frontdoor/.env

    ports:
      - 8000:8000

    volumes:
      - ./frontdoor/build/libs/frontdoor-0.0.1-SNAPSHOT.jar:/app/e-health.jar

  # Auth
  gatekeeper:
    container_name: e-health-gatekeeper
    build:
      context: ./gatekeeper
      dockerfile: ../Dockerfile

    env_file:
      - ./gatekeeper/.env
    ports:
      - 8001:8001

    volumes:
      - ./gatekeeper/build/libs/gatekeeper-0.0.1-SNAPSHOT.jar:/app/e-health.jar

    depends_on:
      authdb:
        condition: service_healthy

  # Employee
  hr:
    container_name: e-health-hr
    build:
      context: ./hr
      dockerfile: ../Dockerfile

    env_file:
      - ./hr/.env

    ports:
      - 8002:8002

    volumes:
      - ./hr/build/libs/hr-0.0.1-SNAPSHOT.jar:/app/e-health.jar

    depends_on:
      hrdb:
        condition: service_healthy

  # Patient
  ward:
    container_name: e-health-ward
    build:
      context: ./ward
      dockerfile: ../Dockerfile

    env_file:
      - ./ward/.env

    ports:
      - 8003:8003

    volumes:
      - ./ward/build/libs/ward-0.0.1-SNAPSHOT.jar:/app/e-health.jar

    depends_on:
      warddb:
        condition: service_healthy

  # Pharmacy
  rx:
    container_name: e-health-rx
    build:
      context: ./rx
      dockerfile: ../Dockerfile

    env_file:
      - ./rx/.env

    ports:
      - 8004:8004

    volumes:
      - ./rx/build/libs/rx-0.0.1-SNAPSHOT.jar:/app/e-health.jar

    depends_on:
      rxdb:
        condition: service_healthy

  # BEGIN: Microservice Databases

  authdb:
    container_name: e-health-auth-db
    image: postgres:17.1-alpine
    ports:
      - 5431:5432
    
    volumes:
      - ./ddls/authdb-ddl.sql:/docker-entrypoint-initdb.d/ddl.sql

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth

  hrdb:
    container_name: e-health-hr-db
    image: postgres:17.1-alpine
    ports:
      - 5432:5432

    volumes:
      - ./ddls/hrdb-ddl.sql:/docker-entrypoint-initdb.d/ddl.sql

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hr

  warddb:
    container_name: e-health-ward-db
    image: postgres:17.1-alpine
    ports:
      - 5433:5432

    volumes:
      - ./ddls/warddb-ddl.sql:/docker-entrypoint-initdb.d/ddl.sql

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ward

  rxdb:
    container_name: e-health-rx-db
    image: postgres:17.1-alpine
    ports:
      - 5434:5432

    volumes:
      - ./ddls/rxdb-ddl.sql:/docker-entrypoint-initdb.d/ddl.sql

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rx
